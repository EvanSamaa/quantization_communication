input_modder = Per_link_Input_modification_compress_XG(K, M, N_rf, k)


2x512 ->
def dnn_per_link(input_shape, N_rf):
    inputs = Input(shape=input_shape)
    x = Dense(512)(inputs)
    x = tf.keras.layers.BatchNormalization()(x)
    x = sigmoid(x)
    x = Dense(N_rf)(x)
    # x = sigmoid(x)
    model = Model(inputs, x)
    return model
3x512 ->
def dnn_per_link(input_shape, N_rf):
    inputs = Input(shape=input_shape)
    x = Dense(512)(inputs)
    x = tf.keras.layers.BatchNormalization()(x)
    x = sigmoid(x)
    x = Dense(512)(x)
    x = tf.keras.layers.BatchNormalization()(x)
    x = sigmoid(x)
    x = Dense(N_rf)(x)
    # x = sigmoid(x)
    model = Model(inputs, x)
    return model
